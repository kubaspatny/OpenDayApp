<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
       xmlns:faces="http://www.springframework.org/schema/faces"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd http://www.springframework.org/schema/faces http://www.springframework.org/schema/faces/spring-faces-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd" default-autowire="byName">

    <!-- Have Spring servlet handle all static content -->
    <mvc:default-servlet-handler/>
    <mvc:annotation-driven />

    <!-- Spring beans can be configured via annotations -->
    <context:annotation-config></context:annotation-config>

    <!-- Base package for Spring beans v (allowing annotations @Component, @Repository, @Service) -->
    <context:component-scan base-package="cz.kubaspatny.opendayapp"></context:component-scan>

    <!-- Annotation @Configurable -->
    <context:spring-configured></context:spring-configured>

    <!--&lt;!&ndash; async support &ndash;&gt;-->
    <!--<task:annotation-driven executor="myExecutorService" scheduler="mySchedulerService"></task:annotation-driven>-->
    <!--&lt;!&ndash;<task:executor eventId="myExecutorService" pool-size="5-10" queue-capacity="10"></task:executor>&ndash;&gt;-->
    <!--&lt;!&ndash;<task:scheduler eventId="mySchedulerService" pool-size="10"></task:scheduler>&ndash;&gt;-->

    <!--<task:executor id="myExecutorService" pool-size="10" queue-capacity="100"></task:executor>-->
    <!--<task:scheduler id="mySchedulerService" pool-size="10"></task:scheduler>-->

    <!--LOCAL TESTING -->
    <context:property-placeholder location="classpath:credentials_localhost.properties" />
    <!--<context:property-placeholder location="classpath:db.properties" />-->

     <!--Connection pool-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="initialSize" value="2" />-->
        <!--<property name="minIdle" value="2" />-->
    <!--</bean>-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/opendays"/>
        <property name="username" value="opendays"/>
        <property name="password" value="fedreDr4"/>
        <property name="initialSize" value="2" />
        <property name="minIdle" value="2" />
    </bean>
    <!--LOCAL TESTING END -->

    <!-- OPEN SHIFT -->
    <!--<context:property-placeholder location="classpath:db.properties" />-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="org.postgresql.Driver"/>-->
        <!--<property name="url" value="jdbc:postgresql://${OPENSHIFT_POSTGRESQL_DB_HOST}:${OPENSHIFT_POSTGRESQL_DB_PORT}/resttime"/>-->
        <!--<property name="username" value="${OPENSHIFT_POSTGRESQL_DB_USERNAME}"/>-->
        <!--<property name="password" value="${OPENSHIFT_POSTGRESQL_DB_PASSWORD}"/>-->
        <!--<property name="initialSize" value="2" />-->
        <!--<property name="minIdle" value="2" />-->
    <!--</bean>-->
    <!-- OPEN SHIFT END -->

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath*:initializeACLSchema.sql"/>
    </jdbc:initialize-database>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="databasePlatform" value="${jpa.platform}"/>
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="false"/>
            </bean>
        </property>
        <property name="packagesToScan" value="cz.kubaspatny.opendayapp" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Annotation @Transactional support -->
    <tx:annotation-driven transaction-manager="txManager" />

    <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager">
            <ref bean="txManager"/>
        </property>
    </bean>

</beans>